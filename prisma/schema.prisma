generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id                  Int            @id @default(autoincrement())
  fullName            String         @map("full_name")
  username            String         @unique
  email               String?        @unique
  password            String
  roleId              Int            @map("role_id")
  tokenVersion        Int            @default(0) @map("token_version")
  createdAt           DateTime       @default(now()) @map("created_at")
  updatedAt           DateTime       @updatedAt @map("updated_at")
  role                role           @relation(fields: [roleId], references: [id])
  printedCoas         print_coa[]    @relation("printedBy")
  deletedCoasCreated  deleted_coa[]  @relation("DeletedCreatedBy", map: "deleted_coa_created_fkey")
  deletedCoasApproved deleted_coa[]  @relation("DeletedApprovedBy", map: "deleted_coa_approved_fkey")
  deletedCoas         deleted_coa[]  @relation("DeletedBy", map: "deleted_coa_deleted_fkey")
  restoredCoas        deleted_coa[]  @relation("RestoredBy", map: "deleted_coa_restored_fkey")
  logs                log[]
  products            master_product[]
  planningHeaders     planning_header[]
  planningDetails     planning_detail[]

  @@map("users")
}

enum PrintStatus {
  REQUESTED
  APPROVED
  REJECTED
}

model print_coa {
  id                 Int       @id @default(autoincrement())
  status             PrintStatus
  planningId         Int?      @map("planning_id")
  costumerName       String    @map("costumer_name")
  productId          Int       @map("product_id")
  productName        String    @map("product_name")
  lotNumber          String    @map("lot_number")
  quantity           Float?
  letDownRatio       String?   @map("let_down_ratio")
  resin              String?
  pelletLength       Float?    @map("pellet_length")
  pelletDiameter     Float?    @map("pellet_diameter")
  pelletVisual       String?   @map("pellet_visual")
  dispersibility     Float?
  mfr                Float?
  density            Float?
  moisture           Float?
  carbonContent      Float?    @map("carbon_content")
  mfgDate            DateTime? @map("mfg_date")
  expiryDate         DateTime? @map("expiry_date")
  analysisDate       DateTime? @map("analysis_date")
  printedDate        DateTime  @default(now()) @map("printed_date")
  foreignMatter      Float?    @map("foreign_matter")
  weightOfChips      Float?    @map("weight_of_chips")
  intrinsicViscosity Float?    @map("intrinsic_viscosity")
  ashContent         Float?    @map("ash_content")
  heatStability      Float?    @map("heat_stability")
  lightFastness      Float?    @map("light_fastness")
  granule            Float?
  tintDeltaE         Float?    @map("tint_delta_e")
  colorDeltaE        Float?    @map("color_delta_e")
  deltaP             Float?    @map("delta_p")
  macaroni           Float?
  issueBy            String?   @map("issue_by")
  approvedBy         Int?      @map("approved_by")
  approvedDate       DateTime? @map("approved_date")
  createdAt          DateTime  @default(now()) @map("created_at")
  printedBy          Int?      @map("printed_by")
  creator            user?     @relation("printedBy", fields: [printedBy], references: [id])
  caCO3              Float?    @map("ca_co3")
  odor               String?   @map("odor")
  nucleatingAgent    String?   @map("nucleating_agent")
  hals               String?   @map("hals")
  hiding             String?   @map("hiding")

  @@map("print_coa")
}

model role {
  id          Int               @id @default(autoincrement())
  name        String            @unique
  description String?
  createdAt   DateTime          @default(now()) @map("created_at")
  updatedAt   DateTime          @updatedAt @map("updated_at")
  users       user[]
  permissions role_permission[]

  @@map("roles")
}

model permission {
  id          Int               @id @default(autoincrement())
  name        String            @unique
  description String?
  createdAt   DateTime          @default(now()) @map("created_at")
  updatedAt   DateTime          @updatedAt @map("updated_at")
  roles       role_permission[]

  @@map("permissions")
}

model role_permission {
  id           Int        @id @default(autoincrement())
  roleId       Int        @map("role_id")
  permissionId Int        @map("permission_id")
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")
  role         role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission   permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@unique([roleId, permissionId])
  @@map("role_permissions")
}

model master_product {
  id                 Int       @id @default(autoincrement())
  productName        String    @map("product_name")
  resin              String?
  letDownRatio       String?   @map("let_down_ratio")
  expiredAge         Float?    @map("expired_age")
  status             String    @default("draft")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")
  createdBy          Int       @map("created_by")
  creator            user      @relation(fields: [createdBy], references: [id])
  planningHeaders    planning_header[]   @relation("ProductPlanningHeader")
  product_standards  product_standards[]

  @@map("master_products")
}

model product_standards {
  id            Int            @id @default(autoincrement())
  product_id    Int
  property_name String
  target_value  Float
  tolerance     Float?
  operator      Operator
  unit          String
  product       master_product @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@map("product_standards")
}

model deleted_coa {
  id                 Int       @id @default(autoincrement())
  costumerName       String    @map("costumer_name")
  productName        String    @map("product_name")
  lotNumber          String    @map("lot_number")
  letDownRatio       String?   @map("let_down_ratio")
  pelletLength       Float?    @map("pellet_length")
  pelletHeight       Float?    @map("pellet_height")
  pelletVisual       Boolean?  @map("pellet_visual")
  dispersibility     String?
  mfr                Float?
  density            Float?
  moisture           Float?
  carbonContent      Float?    @map("carbon_content")
  mfgDate            DateTime? @map("mfg_date")
  expiryDate         DateTime? @map("expiry_date")
  analysisDate       DateTime? @map("analysis_date")
  printedDate        DateTime? @map("printed_date")
  foreignMatter      String?   @map("foreign_matter")
  weightOfChips      Float?    @map("weight_of_chips")
  intrinsicViscosity Float?    @map("intrinsic_viscosity")
  ashContent         Float?    @map("ash_content")
  heatStability      Float?    @map("heat_stability")
  lightFastness      Float?    @map("light_fastness")
  granule            String?
  deltaE             Float?    @map("delta_e")
  macaroni           Float?
  issueBy            String?   @map("issue_by")
  approvedBy         Int?      @map("approved_by")
  approvedDate       DateTime? @map("approved_date")
  createdBy          Int?      @map("created_by")
  createdAt          DateTime? @map("created_at")
  updatedAt          DateTime? @map("updated_at")
  deletedBy          Int?      @map("deleted_by")
  deletedAt          DateTime  @default(now()) @map("deleted_at")
  isRestored         Boolean   @default(false) @map("is_restored")
  restoredAt         DateTime? @map("restored_at")
  restoredBy         Int?      @map("restored_by")
  originalId         Int       @unique @map("original_id")
  creator            user?     @relation("DeletedCreatedBy", fields: [createdBy], references: [id])
  approver           user?     @relation("DeletedApprovedBy", fields: [approvedBy], references: [id])
  deleter            user?     @relation("DeletedBy", fields: [deletedBy], references: [id])
  restorer           user?     @relation("RestoredBy", fields: [restoredBy], references: [id])

  @@map("deleted_coa")
}

model master_customer {
  id                        Int      @id @default(autoincrement())
  name                      String
  pelletLength              Boolean? @default(false) @map("pellet_length")
  pelletDiameter            Boolean? @default(false) @map("pellet_diameter")
  visualCheck               Boolean? @default(false) @map("visual_check")
  colorCheck                Boolean? @default(false) @map("color_check")
  dispersibility            Boolean? @default(false) @map("dispersibility")
  mfr                       Boolean? @default(false) @map("mfr")
  density                   Boolean? @default(false) @map("density")
  moisture                  Boolean? @default(false) @map("moisture")
  carbonContent             Boolean? @default(false) @map("carbon_content")
  mfgDate                   Boolean? @default(false) @map("mfg_date")
  expiryDate                Boolean? @default(false) @map("expiry_date")
  analysisDate              Boolean? @default(false) @map("analysis_date")
  foreignMatter             Boolean? @default(false) @map("foreign_matter")
  weightOfChips             Boolean? @default(false) @map("weight_of_chips")
  intrinsicViscosity        Boolean? @default(false) @map("intrinsic_viscosity")
  ashContent                Boolean? @default(false) @map("ash_content")
  heatStability             Boolean? @default(false) @map("heat_stability")
  lightFastness             Boolean? @default(false) @map("light_fastness")
  granule                   Boolean? @default(false) @map("granule")
  tintDeltaE                Boolean? @default(false) @map("tint_delta_e")
  colorDeltaE               Boolean? @default(false) @map("color_delta_e")
  deltaP                    Boolean? @default(false) @map("delta_p")
  macaroni                  Boolean? @default(false) @map("macaroni")
  caCO3                     Boolean? @default(false) @map("ca_co3")
  odor                      Boolean? @default(false) @map("odor")
  nucleatingAgent           Boolean? @default(false) @map("nucleating_agent")
  hals                      Boolean  @default(false) @map("hals")
  hiding                    Boolean  @default(false) @map("hiding")
  createdAt                 DateTime @default(now()) @map("created_at")
  updatedAt                 DateTime @updatedAt @map("updated_at")
  planningHeaders           planning_header[] @relation("CustomerPlanningHeader")

  @@unique([name])
  @@map("master_customers")
}

model log {
  id          Int         @id @default(autoincrement())
  action      String
  description String
  coaId       Int?        @map("coa_id")
  userId      Int         @map("user_id")
  createdAt   DateTime    @default(now()) @map("created_at")
  user        user        @relation(fields: [userId], references: [id])

  @@map("logs")
}

enum Status {
  open
  progress
  close
}

enum Operator {
  PLUS_MINUS
  LESS_THAN
  LESS_EQUAL
  GREATER_THAN
  GREATER_EQUAL
}

model planning_header {
  id              Int       @id @default(autoincrement())
  idCustomer      Int       @map("id_customer")
  idProduct       Int       @map("id_product")
  resin           String
  ratio           String
  moulding        String
  lotNumber       String    @map("lot_number")
  qtyPlanning     Int       @map("qty_planning")
  quantityPrint   Float     @default(0) @map("quantity_print")
  quantityCheck   Float     @default(0) @map("quantity_check")
  mfgDate         DateTime  @map("mfg_date")
  expiryDate      DateTime  @map("expiry_date")
  status          Status    @default(open)
  createdBy       Int       @map("created_by")
  createdAt       DateTime  @default(now()) @map("created_at")
  creator         user      @relation(fields: [createdBy], references: [id])
  customer        master_customer @relation("CustomerPlanningHeader", fields: [idCustomer], references: [id])
  product         master_product  @relation("ProductPlanningHeader", fields: [idProduct], references: [id])
  planningDetails planning_detail[]

  @@map("planning_headers")
}

model planning_detail {
  id                 Int      @id @default(autoincrement())
  qty                Float
  idPlanning         Int      @map("id_planning")
  lineNo             Int?     @map("line_no")
  tintDeltaL         Float?   @map("tint_delta_l")
  tintDeltaA         Float?   @map("tint_delta_a")
  tintDeltaB         Float?   @map("tint_delta_b")
  tintDeltaE         Float?   @map("tint_delta_e")
  colorDeltaL        Float?   @map("color_delta_l")
  colorDeltaA        Float?   @map("color_delta_a")
  colorDeltaB        Float?   @map("color_delta_b")
  colorDeltaE        Float?   @map("color_delta_e")
  deltaP             Float?   @map("delta_p")
  density            Float?
  mfr                Float?
  dispersibility     Float?
  contamination      Float?
  macaroni           Float?
  pelletLength       Float?   @map("pellet_length")
  pelletDiameter     Float?   @map("pellet_diameter")
  visualCheck        String?  @map("visual_check")
  colorCheck         String?  @map("color_check")
  moisture           Float?
  carbonContent      Float?   @map("carbon_content")
  foreignMatter      Float?   @map("foreign_matter")
  weightOfChips      Float?   @map("weight_of_chips")
  intrinsicViscosity Float?   @map("intrinsic_viscosity")
  ashContent         Float?   @map("ash_content")
  heatStability      Float?   @map("heat_stability")
  lightFastness      Float?   @map("light_fastness")
  granule            Float?
  qcJudgment         String?  @map("qc_judgment")
  analysisDate       DateTime? @map("analysis_date")
  checkedBy          String?  @map("checked_by")
  caCO3              Float?   @map("ca_co3")
  odor               String?  @map("odor")
  nucleatingAgent    String?  @map("nucleating_agent")
  hals               String?  @map("hals")
  hiding             String?  @map("hiding")
  remark             String?
  planningHeader     planning_header @relation(fields: [idPlanning], references: [id])
  createdBy          Int      @map("created_by")
  createdAt          DateTime @default(now()) @map("created_at")
  creator            user     @relation(fields: [createdBy], references: [id])

  @@map("planning_details")
}


